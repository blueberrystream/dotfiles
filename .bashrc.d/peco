if type peco > /dev/null 2>&1; then
  alias ssh-peco='ssh $(grep -iE "^host[[:space:]]+[^*]" ~/.ssh/config | peco | awk "{print \$2}")'
  alias ll-peco='ls -al | peco | awk "{print \$9}"'
  alias cd-peco='cd $(ll-peco)'
  alias vim-peco='vim $(ll-peco)'
  alias less-peco='less $(ll-peco)'

  if type pt > /dev/null 2>&1; then
    function pt-vim() {
      vim $(pt "$@" | peco --query "$LBUFFER" | awk -F : '{print "-c " $2 " " $1}')
    }
  fi

  if type tree > /dev/null 2>&1; then
    function tree-vim() {
      vim $(tree -afi | peco | xargs echo)
    }
  fi

  if type git > /dev/null 2>&1; then
    function git-changed-files() {
      git st --short | peco | awk '{print $2}'
    }

    alias vim-git-st='vim $(git-changed-files)'
    alias git-add-st='git add $(git-changed-files)'
    alias git-co-st='git co $(git-changed_files)'
  fi

  if type tmux > /dev/null 2>&1; then
    function tmux-ls() {
      tmux ls | peco | awk '{print $1}'
    }

    alias tmux-peco='tmux a -t $(tmux-ls)'
  fi

  if type reptyr > /dev/null 2>&1; then
    alias reptyr-peco='reptyr $(ps ux | peco | awk "{print $2}")'
  fi

  # http://qiita.com/comutt/items/f54e755f22508a6c7d78
  history-peco() {
    declare l=$(HISTTIMEFORMAT= history | sort -k1,1nr | perl -ne 'BEGIN { my @lines = (); } s/^\s*\d+\s*//; $in=$_; if (!(grep {$in eq $_} @lines)) { push(@lines, $in); print $in; }' | peco --query "$READLINE_LINE")
    READLINE_LINE="$l"
    READLINE_POINT=${#l}
  }
  bind -x '"\C-r": history-peco'

  if type reptyr > /dev/null 2>&1; then
    # https://qiita.com/yuuAn/items/b3579c6349f662963651
    function reattach-pty {
      pid=$(ps uxfww | peco | awk '{print $2}')
      [[ -n "$pid" ]] && reptyr "$pid"
    }
  fi

  if type tmuxinator > /dev/null 2>&1; then
    alias mux-peco='tmuxinator `tmuxinator list | peco`'
  fi
fi
